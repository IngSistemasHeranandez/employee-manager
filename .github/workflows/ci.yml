name: CI - EMPLOYEE-MANAGER

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Configurar .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Instalar SonarScanner para .NET
      run: |
        dotnet tool install --tool-path ./tools dotnet-sonarscanner
        echo "TOOLS_PATH=$GITHUB_WORKSPACE/tools" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/tools" >> $GITHUB_PATH

    - name: Mostrar entorno y token (DEBUG)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        echo "🛠️ PATH: $PATH"
        echo "📁 TOOLS_PATH: $TOOLS_PATH"
        echo "🔐 SONAR_TOKEN length: ${#SONAR_TOKEN}"
        echo "🏢 Organización: ingsistemasheranandez"
        echo "📦 Proyecto: employee-manager"

    - name: Iniciar análisis de SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin \
          /k:"employee-manager" \
          /o:"ingsistemasheranandez" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.verbose=true

        dotnet restore
        dotnet build --no-restore

        # DEBUG: Verifica los archivos generados antes del end
        echo "📂 Contenido generado por Sonar:"
        ls -R .sonarqube/out || echo "⚠️ No se encontraron archivos de salida .sonarqube/out"

        # ⚠️ Evita que falle el pipeline si el análisis tiene advertencias no críticas
        dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}" || true

    - name: Ejecutar pruebas
      run: dotnet test --no-build --verbosity normal
